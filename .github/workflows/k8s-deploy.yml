name: k8s-deploy

on:
  workflow_call:
    inputs:
      soln-name:
        required: true
        type: string
      docker-name:
        required: true
        type: string
      scm-project-name:
        required: true
        type: string

jobs:
  docker-build-publish:
    runs-on: self-hosted

    steps:

      # Get k8s folder from S3
      - name: Set folder path env var
        run:  >-
          SCM_PROJECT_NAME_LOWER=$(echo ${{ inputs.scm-project-name }} | tr "[:upper:]" "[:lower:]") 
          && echo SCM_PROJECT_NAME_LOWER="$SCM_PROJECT_NAME_LOWER"
          && echo "AWS_S3_PATH=$SCM_PROJECT_NAME_LOWER/${{ inputs.soln-name }}" >> $GITHUB_ENV
      - name: Test S3 path env var
        run: echo "AWS_S3_PATH=$AWS_S3_PATH"
      - name: Download from S3
        run: aws s3 cp "s3://$AWS_S3_PATH/k8s" ./k8s --recursive

      # Download artifacts
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.soln-name }}-k8s
          path: ./k8s
    
      - name: List downloaded files
        run: ls -R ./k8s
      
      # Deploy using kubectl
      - name: Create amespace if not exists
        run: kubectl create namespace ${{ secrets.K8S_NAMESPACE }} || true
      - name: Set context
        run: kubectl config set-context --current --namespace=${{ secrets.K8S_NAMESPACE }}
      - name: Apply manifests
        run: kubectl apply -f k8s
      - name: Restart pod
        run: kubectl rollout restart deployment/${{ inputs.docker-name }}
      - name: List pods
        run: date && kubectl get pods